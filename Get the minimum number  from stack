class Solution:

    def __init__(self):
        # code here
        self.st = []
        self.min_st = []
        
    # Add an element to the top of Stack
    def push(self, x):
        # code here
        self.st.append(x)
        if not self.min_st or x<=self.min_st[-1]:
            self.min_st.append(x)

    # Remove the top element from the Stack
    def pop(self):
        # code here
        if not self.st:
            return
        val = self.st.pop()
        if val == self.min_st[-1]:
            self.min_st.pop()
        

    # Returns top element of Stack
    def peek(self):
        # code here
        if self.st:
            return self.st[-1]
        else:
            return -1

    # Finds minimum element of Stack
    def getMin(self):
        # code here
        if not self.min_st:
            return -1
        else:
            return self.min_st[-1]
