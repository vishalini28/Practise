class Solution:
    def maxCircularSum(self, arr):
        n = len(arr)

        # Standard Kadane's for non-wrapping max subarray sum
        max_kadane = curr_max = arr[0]
        min_kadane = curr_min = arr[0]
        total_sum = arr[0]

        for i in range(1, n):
            curr_max = max(arr[i], curr_max + arr[i])
            max_kadane = max(max_kadane, curr_max)

            curr_min = min(arr[i], curr_min + arr[i])
            min_kadane = min(min_kadane, curr_min)

            total_sum += arr[i]

        # If all numbers are negative, return max_kadane (don't wrap)
        if max_kadane < 0:
            return max_kadane
        
        # Otherwise, consider wrapping case
        return max(max_kadane, total_sum - min_kadane)
